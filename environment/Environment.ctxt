#BlueJ class context
comment0.target=Environment
comment0.text=\n\ The\ Environment\ class'\ primary\ purpose\ is\ to\ create,\ access,\ and\ remember\n\ the\ values\ of\ the\ variables\ and\ procedures\ that\ have\ been\ defined.\ \n\n\ @author\ Anish\ Jain\n\ @version\ 11.9.23\n
comment1.params=p
comment1.target=Environment(Environment)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Environment\n\ \n\ @param\ p\ the\ parent\ environment;\ otherwise,\ null\ if\ this\ is\ the\ global\n\ \ \ \ \ \ \ \ enivronment\n
comment2.params=variable\ value
comment2.target=void\ setVariable(java.lang.String,\ int)
comment2.text=\n\ Sets\ a\ variable's\ value,\ replacing\ the\ existing\ value\ in\ either\ this\ \n\ environment\ or\ the\ parent\ environment.\ \n\ \n\ Otherwise,\ creates\ a\ new\ variable\ in\ this\ environment's\ HashMap.\n\ \n\ \n\ @param\ variable\ the\ name\ of\ the\ variable\ being\ added/updated\n\ @param\ value\ the\ new\ integer\ value\ of\ the\ variable\ \n\ \n
comment3.params=variable
comment3.target=int\ getVariable(java.lang.String)
comment3.text=\n\ Returns\ the\ value\ that\ is\ associated\ with\ the\ inputted\ variable\ name\ \n\ or\ checks\ the\ parent\ environment\ for\ the\ variable.\ \n\ \n\ \n\ @param\ variable\ the\ name\ of\ the\ variable\ to\ get\ from\ the\ HashMap\n\ @return\ int\ the\ corresponding\ value\ of\ the\ variable\n\ @throw\ IllegalArgumentException\ if\ the\ variable\ doesn't\ exist\ in\ either\ \n\ \ \ \ \ \ \ \ environment\n
comment4.params=name\ dec
comment4.target=void\ setProcedure(java.lang.String,\ ast.ProcedureDeclaration)
comment4.text=\n\ Defines/assigns\ a\ procedure\ in\ the\ global\ environment.\n\ \n\ @param\ name\ the\ name\ of\ the\ procedure\n\ @param\ dec\ the\ procedure\ declaration\ with\ its\ params\ and\ statements\ \n\ \n
comment5.params=name
comment5.target=ast.ProcedureDeclaration\ getProcedure(java.lang.String)
comment5.text=\n\ Retrieves\ the\ procedure\ with\ the\ given\ name.\n\ \n\ @param\ name\ the\ name\ of\ the\ procedure\ to\ be\ retrieved\n\ @return\ ProcedureDeclaration\ the\ procedure\ associated\ with\ the\ given\ name\n
comment6.params=variable
comment6.target=boolean\ hasVariable(java.lang.String)
comment6.text=\n\ Tells\ whether\ or\ not\ this\ environment\ or\ parent\ environment\ contains\n\ the\ variable\ that\ is\ requested.\ \n\ \n\ @param\ variable\ the\ name\ of\ the\ variable\ to\ search\ for\n\ @return\ boolean\ true,\ if\ this\ or\ the\ parent\ environment\ contains\ the\ variable,\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise,\ false\n
comment7.params=
comment7.target=Environment\ getParent()
comment7.text=\n\ Returns\ this\ environment's\ parent,\ or\ this\ environment\ if\ it\n\ doesn't\ have\ a\ parent\n\ \n\ @return\ Environment\ the\ parent\ environment\n
comment8.params=variable\ value
comment8.target=void\ declareVariable(java.lang.String,\ int)
comment8.text=\n\ Declares\ a\ variable\ in\ this\ environment\n\ \n\ @param\ variable\ the\ variable\ name\ to\ assign\ the\ value\ to\n\ @param\ value\ the\ value\ of\ the\ variable\n
comment9.params=
comment9.target=java.util.Map\ getAllVariables()
comment9.text=\n\ Getter\ method\ for\ all\ the\ defined\ variables\ in\ this\ environment\ \n\ \n\ \n\ @return\ Map\ containing\ all\ the\ variables/values\ in\ this\ Environment\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n
numComments=10
